name: "Terraform-Plan-Infra-Release"

on:
  push:
    branches:
      - "main"

jobs:
  terraform-apply:
    name: "Terraform"
    runs-on: "ubuntu-latest"
    env:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

  continuous-deployment-apply:
      runs-on: ubuntu-latest
      needs: [terraform-apply]
      steps:
        # - name: Configure AWS credentials
        #   uses: aws-actions/configure-aws-credentials@v1
        #   with:
        #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #     aws-region: ${{ secrets.AWS_REGION }}

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v1
          env:
            AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET }}

        - name: Terraform Init
          id: init
          run: terraform init

        - name: run script task
          run: |
            pwd
            ls -la
        
        - name: Terraform Plan
          id: plan
          if: github.event_name == 'push'
          run: terraform plan -no-color
          continue-on-error: true
        
        - name: Terraform Plan Status
          if: steps.plan.outcome == 'failure'
          run: exit 1
        
        - name: Terraform Apply
          if: github.ref == 'refs/heads/main' && github.event_name == 'push'
          run: terraform apply -auto-approve